# Here we give a name to the whole pipeline. You can call this whatever you want.
name: CI

# Here we decide when we want to run the pipeline.
# In this example we run it whenever a commit is pushed or a pull request is made to the master branch.
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  CI:

    # The default environment of a GitHub job is Ubuntu, which we will leave for what it is.
    # We also define a Ruby version, in this example we use Ruby 2.7.
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.7']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
      with:
        # We use the Ruby version that we just set. 
        # This step will also automatically install all the gems with Bundler, so we don't have to explicitly run it.
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true 

    # Now we run the Cucumber tests and export their results to a JSON file.
    - name: Run tests
      run: bundle exec cucumber -f json -o output.json -f pretty -c || true

    # Finally we upload the results to Calliope.
    - name: Upload results to Calliope
      run: curl -X POST
           -H "x-api-key:${{ secrets.API_KEY }}"
           -H "multipart/form-data"
           -F "file[]=@output.json"
           "https://app.calliope.pro/api/v2/profile/${{ secrets.PROFILE_ID }}/import/cucumber?tag[]=myos&tag[]=myplatform&tag[]=mybuild"
